{"version":3,"file":"knex-relay-cursor-pagination.cjs.development.js","sources":["../src/knex-relay-cursor-pagination.ts"],"sourcesContent":["import { Knex } from 'knex';\n\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\ntype XOR<T, U> = T | U extends object\n  ? (Without<T, U> & U) | (Without<U, T> & T)\n  : T | U;\n\nexport type PaginationParams = PaginationSliceParams &\n  PaginationDatasetParams &\n  PaginationCursorParams;\n\nexport interface PaginationDatasetParams {\n  from: string;\n  cursorColumn: Column;\n  sortColumn: Column;\n  sortDirection: SortDirection;\n}\n\nexport interface PaginationCursorParams {\n  obfuscateCursor?: (cursor: Cursor) => Cursor;\n  deobfuscateCursor?: (obfuscatedCursor: Cursor) => Cursor;\n  onCursorMissing?: 'throw' | 'omit';\n}\n\ntype Column = XOR<string, AliasedColumn>;\n\ninterface AliasedColumn {\n  column: string;\n  alias: string;\n}\n\nexport type PaginationSliceParams = ForwardPaginationSliceParams &\n  BackwardPaginationSliceParams;\n\nexport interface ForwardPaginationSliceParams {\n  first?: number;\n  after?: Cursor;\n}\n\nexport interface BackwardPaginationSliceParams {\n  last?: number;\n  before?: Cursor;\n}\n\ninterface InternalSliceParams {\n  direction: PaginationDirection;\n  limit: number;\n  cursor?: Cursor;\n}\n\ntype PaginationDirection = 'forward' | 'backward';\n\nexport interface Predicate {\n  orderBy: OrderBy;\n  limit: number;\n  where: Where;\n}\n\nexport type Cursor = string | number;\n\nexport type OrderBy = {\n  column: string;\n  direction: SortDirection;\n};\n\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface Where {\n  column: string;\n  comparator: Comparator;\n  value: (b: Knex.QueryBuilder) => Knex.QueryBuilder;\n}\n\nexport interface NoopWhere {\n  column: (q: Knex.QueryBuilder) => Knex.QueryBuilder;\n  comparator: '>';\n  value: 0;\n}\n\nexport interface Edge<T = unknown> {\n  cursor: Cursor;\n  node: T;\n}\n\nexport interface PageInfo {\n  endCursor?: Cursor;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  startCursor?: Cursor;\n}\n\nexport interface Page<T = unknown> {\n  edges: Edge<T>[];\n  pageInfo: PageInfo;\n}\n\ntype Row = { [key: string]: unknown };\n\nexport function createPagination(params: PaginationParams) {\n  const { first, after, last, before } = params;\n\n  if (first === undefined && last === undefined) {\n    throw new Error('pagination requires either a `first` or `last` param');\n  }\n\n  const paginationSliceParams = getInternalSliceParams({\n    first,\n    after,\n    last,\n    before,\n  } as PaginationSliceParams);\n\n  const comparator = getComparator(\n    params.sortDirection,\n    paginationSliceParams.direction\n  );\n  const sortDirection = getSortDirection(\n    params.sortDirection,\n    paginationSliceParams.direction\n  );\n  const sortColumn = getColumn(params.sortColumn);\n  const cursorColumn = getColumn(params.cursorColumn);\n\n  const orderBy: OrderBy = {\n    column: sortColumn,\n    direction: sortDirection,\n  };\n  const returnableLimit = paginationSliceParams.limit;\n  const queryableLimit = paginationSliceParams.limit + 1;\n\n  const where = ((): Where => {\n    if (paginationSliceParams.cursor === undefined) {\n      // this is a noop where-clause value that can\n      // be passed to knex .where in same way as the\n      // non-noop where-clause value and still work\n      return {\n        column: (q: Knex.QueryBuilder) => q,\n        comparator: '>',\n        value: 0,\n      } as unknown as Where;\n    }\n\n    const { deobfuscateCursor = atob } = params;\n    const cursor = deobfuscateCursor(paginationSliceParams.cursor as string);\n\n    const subquery = (q: Knex.QueryBuilder): any =>\n      q\n        .from(params.from)\n        .select(sortColumn)\n        .where(cursorColumn, '=', cursor as Knex.Value);\n\n    return {\n      column: sortColumn,\n      comparator: comparator,\n      value: subquery,\n    };\n  })();\n\n  const predicate: Predicate = {\n    orderBy,\n    limit: queryableLimit,\n    where,\n  };\n\n  const processItems = (rows: Row[]): [Row[], Row | undefined] => {\n    if (rows.length === 0) {\n      return [[], undefined];\n    }\n\n    if (rows.length <= returnableLimit) {\n      return [\n        paginationSliceParams.direction === 'backward'\n          ? [...rows.reverse()]\n          : rows,\n        undefined,\n      ];\n    }\n\n    if (rows.length === queryableLimit) {\n      const itemsOfPage = [...rows];\n      const adjacentItem = itemsOfPage.pop();\n      return [\n        paginationSliceParams.direction === 'backward'\n          ? itemsOfPage.reverse()\n          : itemsOfPage,\n        adjacentItem,\n      ];\n    }\n\n    throw new Error(\n      'the queried row count exceeds the expected limit based on the pagination params'\n    );\n  };\n\n  function getPage<T = Row>(\n    rows: Row[],\n    opts: { mapItem?: (item: Row) => T } = {}\n  ): Page<T> {\n    const { obfuscateCursor = btoa, onCursorMissing = 'omit' } = params;\n    const { mapItem = (item: Row) => item } = opts;\n    const cursorAlias = getAlias(params.cursorColumn);\n\n    const [items, adjacentItem] = processItems(rows);\n\n    if (items.length === 0) {\n      return {\n        edges: [],\n        pageInfo: {\n          hasNextPage: false,\n          hasPreviousPage: false,\n          endCursor: undefined,\n          startCursor: undefined,\n        },\n      };\n    }\n\n    const edges = [];\n    for (const item of items) {\n      const cursor = item[cursorAlias];\n      if (cursor === undefined || cursor === null) {\n        if (onCursorMissing === 'throw') {\n          throw new Error('cursor is missing');\n        } else {\n          continue;\n        }\n      }\n\n      const edge = {\n        cursor: obfuscateCursor(cursor.toString()),\n        node: mapItem(item as Row),\n      };\n\n      edges.push(edge);\n    }\n\n    const pageInfo: PageInfo = {\n      hasNextPage:\n        paginationSliceParams.direction === 'backward'\n          ? !!before\n          : !!adjacentItem,\n      hasPreviousPage:\n        paginationSliceParams.direction === 'forward'\n          ? !!after\n          : !!adjacentItem,\n      startCursor: edges[0].cursor,\n      endCursor: edges[edges.length - 1].cursor,\n    };\n\n    return {\n      edges,\n      pageInfo,\n    } as unknown as Page<T>;\n  }\n\n  return {\n    ...predicate,\n    getPage,\n  };\n}\n\nfunction getColumn(column: Column): string {\n  if (typeof column === 'string') {\n    return column;\n  }\n  const aliasedColumn = column as AliasedColumn;\n  return aliasedColumn.column;\n}\n\nfunction getAlias(column: Column): string {\n  if (typeof column === 'string') {\n    return column;\n  }\n  const aliasedColumn = column as AliasedColumn;\n  return aliasedColumn.alias;\n}\n\nfunction getInternalSliceParams(\n  sliceParams: PaginationSliceParams\n): InternalSliceParams {\n  if (sliceParams.last) {\n    return {\n      direction: 'backward',\n      cursor: sliceParams.before,\n      limit: sliceParams.last,\n    };\n  }\n\n  const forwardSliceParams = sliceParams as ForwardPaginationSliceParams;\n  return {\n    direction: 'forward',\n    cursor: forwardSliceParams.after,\n    limit: forwardSliceParams.first,\n  } as InternalSliceParams;\n}\n\nfunction getSortDirection(\n  specifiedSortDirection: SortDirection,\n  paginationDirection: PaginationDirection\n) {\n  if (paginationDirection === 'forward') {\n    return specifiedSortDirection;\n  }\n\n  if (specifiedSortDirection === 'desc') {\n    return 'asc';\n  }\n\n  return 'desc';\n}\n\ntype Comparator = '<' | '>';\n\nfunction getComparator(\n  specifiedSortDirection: SortDirection,\n  paginationDirection: PaginationDirection\n): Comparator {\n  if (specifiedSortDirection === 'desc') {\n    if (paginationDirection === 'forward') {\n      return '<';\n    }\n    if (paginationDirection === 'backward') {\n      return '>';\n    }\n  }\n\n  if (paginationDirection === 'forward') {\n    return '>';\n  }\n\n  return '<';\n}\n"],"names":["createPagination","params","first","after","last","before","undefined","Error","paginationSliceParams","getInternalSliceParams","comparator","getComparator","sortDirection","direction","getSortDirection","sortColumn","getColumn","cursorColumn","orderBy","column","returnableLimit","limit","queryableLimit","where","cursor","q","value","_params$deobfuscateCu","deobfuscateCursor","atob","subquery","from","select","predicate","processItems","rows","length","concat","reverse","itemsOfPage","adjacentItem","pop","getPage","opts","_params$obfuscateCurs","obfuscateCursor","btoa","_params$onCursorMissi","onCursorMissing","_opts","_opts$mapItem","mapItem","item","cursorAlias","getAlias","_processItems","items","edges","pageInfo","hasNextPage","hasPreviousPage","endCursor","startCursor","_iterator","_createForOfIteratorHelperLoose","_step","done","edge","toString","node","push","_extends","aliasedColumn","alias","sliceParams","forwardSliceParams","specifiedSortDirection","paginationDirection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGM,SAAUA,gBAAgBA,CAACC,MAAwB,EAAA;AACvD,EAAA,IAAQC,KAAK,GAA0BD,MAAM,CAArCC,KAAK;IAAEC,KAAK,GAAmBF,MAAM,CAA9BE,KAAK;IAAEC,IAAI,GAAaH,MAAM,CAAvBG,IAAI;IAAEC,MAAM,GAAKJ,MAAM,CAAjBI,MAAM,CAAA;AAElC,EAAA,IAAIH,KAAK,KAAKI,SAAS,IAAIF,IAAI,KAAKE,SAAS,EAAE;AAC7C,IAAA,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC,CAAA;AACxE,GAAA;EAED,IAAMC,qBAAqB,GAAGC,sBAAsB,CAAC;AACnDP,IAAAA,KAAK,EAALA,KAAK;AACLC,IAAAA,KAAK,EAALA,KAAK;AACLC,IAAAA,IAAI,EAAJA,IAAI;AACJC,IAAAA,MAAM,EAANA,MAAAA;AACwB,GAAA,CAAC,CAAA;EAE3B,IAAMK,UAAU,GAAGC,aAAa,CAC9BV,MAAM,CAACW,aAAa,EACpBJ,qBAAqB,CAACK,SAAS,CAChC,CAAA;EACD,IAAMD,aAAa,GAAGE,gBAAgB,CACpCb,MAAM,CAACW,aAAa,EACpBJ,qBAAqB,CAACK,SAAS,CAChC,CAAA;AACD,EAAA,IAAME,UAAU,GAAGC,SAAS,CAACf,MAAM,CAACc,UAAU,CAAC,CAAA;AAC/C,EAAA,IAAME,YAAY,GAAGD,SAAS,CAACf,MAAM,CAACgB,YAAY,CAAC,CAAA;AAEnD,EAAA,IAAMC,OAAO,GAAY;AACvBC,IAAAA,MAAM,EAAEJ,UAAU;AAClBF,IAAAA,SAAS,EAAED,aAAAA;GACZ,CAAA;AACD,EAAA,IAAMQ,eAAe,GAAGZ,qBAAqB,CAACa,KAAK,CAAA;AACnD,EAAA,IAAMC,cAAc,GAAGd,qBAAqB,CAACa,KAAK,GAAG,CAAC,CAAA;EAEtD,IAAME,KAAK,GAAI,YAAY;AACzB,IAAA,IAAIf,qBAAqB,CAACgB,MAAM,KAAKlB,SAAS,EAAE;AAC9C;AACA;AACA;MACA,OAAO;QACLa,MAAM,EAAE,SAAAA,MAAAA,CAACM,CAAoB,EAAA;AAAA,UAAA,OAAKA,CAAC,CAAA;AAAA,SAAA;AACnCf,QAAAA,UAAU,EAAE,GAAG;AACfgB,QAAAA,KAAK,EAAE,CAAA;OACY,CAAA;AACtB,KAAA;AAED,IAAA,IAAAC,qBAAA,GAAqC1B,MAAM,CAAnC2B,iBAAiB;AAAjBA,MAAAA,iBAAiB,GAAAD,qBAAA,KAAGE,KAAAA,CAAAA,GAAAA,IAAI,GAAAF,qBAAA,CAAA;AAChC,IAAA,IAAMH,MAAM,GAAGI,iBAAiB,CAACpB,qBAAqB,CAACgB,MAAgB,CAAC,CAAA;AAExE,IAAA,IAAMM,QAAQ,GAAG,SAAXA,QAAQA,CAAIL,CAAoB,EAAA;MAAA,OACpCA,CAAC,CACEM,IAAI,CAAC9B,MAAM,CAAC8B,IAAI,CAAC,CACjBC,MAAM,CAACjB,UAAU,CAAC,CAClBQ,KAAK,CAACN,YAAY,EAAE,GAAG,EAAEO,MAAoB,CAAC,CAAA;AAAA,KAAA,CAAA;IAEnD,OAAO;AACLL,MAAAA,MAAM,EAAEJ,UAAU;AAClBL,MAAAA,UAAU,EAAEA,UAAU;AACtBgB,MAAAA,KAAK,EAAEI,QAAAA;KACR,CAAA;AACH,GAAC,EAAG,CAAA;AAEJ,EAAA,IAAMG,SAAS,GAAc;AAC3Bf,IAAAA,OAAO,EAAPA,OAAO;AACPG,IAAAA,KAAK,EAAEC,cAAc;AACrBC,IAAAA,KAAK,EAALA,KAAAA;GACD,CAAA;AAED,EAAA,IAAMW,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAW,EAA8B;AAC7D,IAAA,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;AACrB,MAAA,OAAO,CAAC,EAAE,EAAE9B,SAAS,CAAC,CAAA;AACvB,KAAA;AAED,IAAA,IAAI6B,IAAI,CAACC,MAAM,IAAIhB,eAAe,EAAE;AAClC,MAAA,OAAO,CACLZ,qBAAqB,CAACK,SAAS,KAAK,UAAU,MAAAwB,MAAA,CACtCF,IAAI,CAACG,OAAO,EAAE,IAClBH,IAAI,EACR7B,SAAS,CACV,CAAA;AACF,KAAA;AAED,IAAA,IAAI6B,IAAI,CAACC,MAAM,KAAKd,cAAc,EAAE;AAClC,MAAA,IAAMiB,WAAW,GAAA,EAAA,CAAAF,MAAA,CAAOF,IAAI,CAAC,CAAA;AAC7B,MAAA,IAAMK,YAAY,GAAGD,WAAW,CAACE,GAAG,EAAE,CAAA;AACtC,MAAA,OAAO,CACLjC,qBAAqB,CAACK,SAAS,KAAK,UAAU,GAC1C0B,WAAW,CAACD,OAAO,EAAE,GACrBC,WAAW,EACfC,YAAY,CACb,CAAA;AACF,KAAA;AAED,IAAA,MAAM,IAAIjC,KAAK,CACb,iFAAiF,CAClF,CAAA;GACF,CAAA;AAED,EAAA,SAASmC,OAAOA,CACdP,IAAW,EACXQ,MAAyC;AAAA,IAAA,IAAzCA;MAAAA,OAAuC,EAAE,CAAA;AAAA,KAAA;AAEzC,IAAA,IAAAC,qBAAA,GAA6D3C,MAAM,CAA3D4C,eAAe;AAAfA,MAAAA,eAAe,GAAAD,qBAAA,KAAGE,KAAAA,CAAAA,GAAAA,IAAI,GAAAF,qBAAA;MAAAG,qBAAA,GAA+B9C,MAAM,CAAnC+C,eAAe;AAAfA,MAAAA,eAAe,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,MAAM,GAAAA,qBAAA,CAAA;IACxD,IAAAE,KAAA,GAA0CN,IAAI;MAAAO,aAAA,GAAAD,KAAA,CAAtCE,OAAO;AAAPA,MAAAA,OAAO,GAAAD,aAAA,KAAG,KAAA,CAAA,GAAA,UAACE,IAAS,EAAA;AAAA,QAAA,OAAKA,IAAI,CAAA;AAAA,OAAA,GAAAF,aAAA,CAAA;AACrC,IAAA,IAAMG,WAAW,GAAGC,QAAQ,CAACrD,MAAM,CAACgB,YAAY,CAAC,CAAA;AAEjD,IAAA,IAAAsC,aAAA,GAA8BrB,YAAY,CAACC,IAAI,CAAC;AAAzCqB,MAAAA,KAAK,GAAAD,aAAA,CAAA,CAAA,CAAA;AAAEf,MAAAA,YAAY,GAAAe,aAAA,CAAA,CAAA,CAAA,CAAA;AAE1B,IAAA,IAAIC,KAAK,CAACpB,MAAM,KAAK,CAAC,EAAE;MACtB,OAAO;AACLqB,QAAAA,KAAK,EAAE,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,WAAW,EAAE,KAAK;AAClBC,UAAAA,eAAe,EAAE,KAAK;AACtBC,UAAAA,SAAS,EAAEvD,SAAS;AACpBwD,UAAAA,WAAW,EAAExD,SAAAA;AACd,SAAA;OACF,CAAA;AACF,KAAA;IAED,IAAMmD,KAAK,GAAG,EAAE,CAAA;AAChB,IAAA,KAAA,IAAAM,SAAA,GAAAC,+BAAA,CAAmBR,KAAK,CAAA,EAAAS,KAAA,EAAA,CAAA,CAAAA,KAAA,GAAAF,SAAA,EAAA,EAAAG,IAAA,GAAE;AAAA,MAAA,IAAfd,IAAI,GAAAa,KAAA,CAAAvC,KAAA,CAAA;AACb,MAAA,IAAMF,MAAM,GAAG4B,IAAI,CAACC,WAAW,CAAC,CAAA;AAChC,MAAA,IAAI7B,MAAM,KAAKlB,SAAS,IAAIkB,MAAM,KAAK,IAAI,EAAE;QAC3C,IAAIwB,eAAe,KAAK,OAAO,EAAE;AAC/B,UAAA,MAAM,IAAIzC,KAAK,CAAC,mBAAmB,CAAC,CAAA;AACrC,SAAA,MAAM;AACL,UAAA,SAAA;AACD,SAAA;AACF,OAAA;AAED,MAAA,IAAM4D,IAAI,GAAG;QACX3C,MAAM,EAAEqB,eAAe,CAACrB,MAAM,CAAC4C,QAAQ,EAAE,CAAC;QAC1CC,IAAI,EAAElB,OAAO,CAACC,IAAW,CAAA;OAC1B,CAAA;AAEDK,MAAAA,KAAK,CAACa,IAAI,CAACH,IAAI,CAAC,CAAA;AACjB,KAAA;AAED,IAAA,IAAMT,QAAQ,GAAa;AACzBC,MAAAA,WAAW,EACTnD,qBAAqB,CAACK,SAAS,KAAK,UAAU,GAC1C,CAAC,CAACR,MAAM,GACR,CAAC,CAACmC,YAAY;AACpBoB,MAAAA,eAAe,EACbpD,qBAAqB,CAACK,SAAS,KAAK,SAAS,GACzC,CAAC,CAACV,KAAK,GACP,CAAC,CAACqC,YAAY;AACpBsB,MAAAA,WAAW,EAAEL,KAAK,CAAC,CAAC,CAAC,CAACjC,MAAM;MAC5BqC,SAAS,EAAEJ,KAAK,CAACA,KAAK,CAACrB,MAAM,GAAG,CAAC,CAAC,CAACZ,MAAAA;KACpC,CAAA;IAED,OAAO;AACLiC,MAAAA,KAAK,EAALA,KAAK;AACLC,MAAAA,QAAQ,EAARA,QAAAA;KACqB,CAAA;AACzB,GAAA;EAEA,OAAAa,QAAA,KACKtC,SAAS,EAAA;AACZS,IAAAA,OAAO,EAAPA,OAAAA;AAAO,GAAA,CAAA,CAAA;AAEX,CAAA;AAEA,SAAS1B,SAASA,CAACG,MAAc,EAAA;AAC/B,EAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC9B,IAAA,OAAOA,MAAM,CAAA;AACd,GAAA;EACD,IAAMqD,aAAa,GAAGrD,MAAuB,CAAA;EAC7C,OAAOqD,aAAa,CAACrD,MAAM,CAAA;AAC7B,CAAA;AAEA,SAASmC,QAAQA,CAACnC,MAAc,EAAA;AAC9B,EAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC9B,IAAA,OAAOA,MAAM,CAAA;AACd,GAAA;EACD,IAAMqD,aAAa,GAAGrD,MAAuB,CAAA;EAC7C,OAAOqD,aAAa,CAACC,KAAK,CAAA;AAC5B,CAAA;AAEA,SAAShE,sBAAsBA,CAC7BiE,WAAkC,EAAA;EAElC,IAAIA,WAAW,CAACtE,IAAI,EAAE;IACpB,OAAO;AACLS,MAAAA,SAAS,EAAE,UAAU;MACrBW,MAAM,EAAEkD,WAAW,CAACrE,MAAM;MAC1BgB,KAAK,EAAEqD,WAAW,CAACtE,IAAAA;KACpB,CAAA;AACF,GAAA;EAED,IAAMuE,kBAAkB,GAAGD,WAA2C,CAAA;EACtE,OAAO;AACL7D,IAAAA,SAAS,EAAE,SAAS;IACpBW,MAAM,EAAEmD,kBAAkB,CAACxE,KAAK;IAChCkB,KAAK,EAAEsD,kBAAkB,CAACzE,KAAAA;GACJ,CAAA;AAC1B,CAAA;AAEA,SAASY,gBAAgBA,CACvB8D,sBAAqC,EACrCC,mBAAwC,EAAA;EAExC,IAAIA,mBAAmB,KAAK,SAAS,EAAE;AACrC,IAAA,OAAOD,sBAAsB,CAAA;AAC9B,GAAA;EAED,IAAIA,sBAAsB,KAAK,MAAM,EAAE;AACrC,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AAED,EAAA,OAAO,MAAM,CAAA;AACf,CAAA;AAIA,SAASjE,aAAaA,CACpBiE,sBAAqC,EACrCC,mBAAwC,EAAA;EAExC,IAAID,sBAAsB,KAAK,MAAM,EAAE;IACrC,IAAIC,mBAAmB,KAAK,SAAS,EAAE;AACrC,MAAA,OAAO,GAAG,CAAA;AACX,KAAA;IACD,IAAIA,mBAAmB,KAAK,UAAU,EAAE;AACtC,MAAA,OAAO,GAAG,CAAA;AACX,KAAA;AACF,GAAA;EAED,IAAIA,mBAAmB,KAAK,SAAS,EAAE;AACrC,IAAA,OAAO,GAAG,CAAA;AACX,GAAA;AAED,EAAA,OAAO,GAAG,CAAA;AACZ;;;;"}